Question,Original Question,Actual Solution,Codex Input,Codex Output,Zero-Shot Evaluation,Most Similar Questions
1,"Fernanda has five different books and seven different pens to share with her two grandchildren, Armando and Catarino. Fernanda will offer three books and three pens to one of the grandchildren, and the remaining objects to the other, or four books and two pens to one of the grandchildren, and the remaining objects to the other. Determine, under these conditions, how many different ways Fernanda can divide the twelve objects between her two grandchildren.",overfit,"""""""
write a program that answers the following question: Fernanda has five different books and seven different pens to share with her two grandchildren, Armando and Catarino. Fernanda will offer three books and three pens to one of the grandchildren, and the remaining objects to the other, or four books and two pens to one of the grandchildren, and the remaining objects to the other. Determine, under these conditions, how many different ways Fernanda can divide the twelve objects between her two grandchildren.
""""""
","
import math # Solution

number_of_grandchildren = 2

# The number of ways to choose 3 books from 5 books
books = 5

books_chosen = 3
books_combinations = math.factorial(books) / (math.factorial(books_chosen) * math.factorial(books - books_chosen))

# The number of ways to choose 3 pens from 7 pens
pens = 7
pens_chosen = 3
pens_combinations = math.factorial(pens) / (math.factorial(pens_chosen) * math.factorial(pens - pens_chosen))

# The number of ways to choose 3 books and 3 pens from 5 books and 7 pens
combinations_3_books_3_pens = number_of_grandchildren * books_combinations * pens_combinations

# The number of ways to choose 4 books from 5 books
books_chosen = 4
books_combinations = math.factorial(books) / (math.factorial(books_chosen) * math.factorial(books - books_chosen))

# The number of ways to choose 2 pens from 7 pens
pens_chosen = 2
pens_combinations = math.factorial(pens) / (math.factorial(pens_chosen) * math.factorial(pens - pens_chosen))

# The number of ways to choose 4 books and 2 pens from 5 books and 7 pens
combinations_4_books_2_pens = number_of_grandchildren * books_combinations * pens_combinations

total_combinations = combinations_3_books_3_pens + combinations_4_books_2_pens

print(total_combinations)",,"[25, 2, 3, 6, 8, 7, 21, 22, 5, 9, 24, 17, 18, 4, 19, 20, 12, 11, 15, 13, 14, 10, 23, 16]"
2,"Korfball is a mixed team sport, which originated in the Netherlands. A korfball club from a certain country is going to participate in an international tournament. The delegation will travel by land, using a five-seater car and a nine-seater van. The entourage consists of three managers, a coach, five male and five female players. Write an expression that gives the number of different ways to distribute the fourteen elements of the entourage among the fourteen available places, knowing that the two drivers are two of the managers and that, in the car, there are two players of each gender.",overfit,"""""""
write a program that answers the following question: Korfball is a mixed team sport, which originated in the Netherlands. A korfball club from a certain country is going to participate in an international tournament. The delegation will travel by land, using a five-seater car and a nine-seater van. The entourage consists of three managers, a coach, five male and five female players. Write an expression that gives the number of different ways to distribute the fourteen elements of the entourage among the fourteen available places, knowing that the two drivers are two of the managers and that, in the car, there are two players of each gender.
""""""
","
import math # Solution

car_seats = 5
car_drivers = 1
van_seats = 9
van_drivers = 1
drivers = car_drivers + van_drivers
managers = 3

# The number of ways to choose 2 drivers from 3 managers
permutations_drivers = math.factorial(managers) / (math.factorial(managers - drivers))

coaches = 1
male_players = 5
female_players = 5
max_players_of_each_gender_in_car = 2

# The number of ways to choose 2 male players among 5 male players
combinations_male_players_in_car = math.factorial(male_players) / (math.factorial(max_players_of_each_gender_in_car) * math.factorial(male_players - max_players_of_each_gender_in_car))

# The number of ways to choose 2 female players among 5 female players
combinations_female_players_in_car = math.factorial(female_players) / (math.factorial(max_players_of_each_gender_in_car) * math.factorial(female_players - max_players_of_each_gender_in_car))

# The number of ways to order 4 passengers in the car
car_seat_ordering = math.factorial(car_seats - car_drivers) 

# The number of ways to order 8 passengers in the van
van_seat_ordering = math.factorial(van_seats - van_drivers) 

# The total number of different ways to distribute the fourteen elements of the entourage among the fourteen available places
total_ways = permutations_drivers * combinations_male_players_in_car * combinations_female_players_in_car * car_seat_ordering * van_seat_ordering

print(total_ways)
",,"[3, 6, 7, 8, 1, 17, 21, 18, 22, 25, 24, 19, 12, 5, 4, 20, 9, 15, 11, 10, 16, 13, 14, 23]"
3,"A bag contains blue balls and white balls, indistinguishable by touch. Each ball has a single color and there are only blue balls and white balls in the bag. There are eight blue balls and seven white balls in the bag. The intention is to place all these balls in ten boxes numbered from 1 to 10, in such a way that: each box with an even number has at least one blue ball; each odd-numbered box has at least one white ball; and each box has a maximum of two balls. Under these conditions, how many different ways can the balls be placed in the ten boxes?",overfit,"""""""
write a program that answers the following question: Consider that the initial constitution of the bag has changed and that, in this bag, there are now eight blue balls and seven white balls. The intention is to place all these balls in ten boxes numbered from 1 to 10, in such a way that: each box with an even number has at least one blue ball; each odd-numbered box has at least one white ball; Each box has a maximum of two balls. Under these conditions, how many different ways can the balls be placed in the ten boxes?
""""""
","
import math

# there are 8 blue balls and 7 white balls
blue_balls = 8
white_balls = 7

# there are 5 even-numbered boxes and 5 odd-numbered boxes
even_boxes = 5
odd_boxes = 5
total_boxes = even_boxes + odd_boxes

# after each even-numbered box gets 1 blue ball, there are 3 blue balls remaining
blue_balls_remaining = blue_balls - even_boxes

# after each odd-numbered box gets 1 white ball, there are 2 white balls remaining
white_balls_remaining = white_balls - odd_boxes

# The number of ways to place the 2 remaning white balls among the 10 boxes
combinations_white_balls_in_remaining_boxes = math.factorial(total_boxes) / (math.factorial(white_balls_remaining) * math.factorial(total_boxes - white_balls_remaining))

# The number of ways to place the 3 remaning white balls among the remaining 8 boxes
combinations_blue_balls_in_remaining_boxes = math.factorial(total_boxes - white_balls_remaining) / (math.factorial(blue_balls_remaining) * math.factorial( (total_boxes - white_balls_remaining) - blue_balls_remaining))

# The total number of different ways to distribute the balls in the boxes
total_ways = combinations_white_balls_in_remaining_boxes * combinations_blue_balls_in_remaining_boxes

print(total_ways)
",,"[2, 6, 7, 8, 1, 17, 18, 22, 21, 25, 24, 19, 12, 4, 5, 9, 20, 15, 11, 10, 16, 13, 14, 23]"
4,"Three Swedish guests and four Danish guests intend to visit the hotel's surroundings. To this end, the hotel provides four bikes with two seats each (one black, one yellow, one white and one green). It is known that only Danish guests are allowed to drive. In how many different ways can the seven guests be distributed among the four bikes in this way?",overfit,"""""""
write a program that answers the following question: Three Swedish guests and four Danish guests intend to visit the hotel's surroundings. To this end, the hotel provides four motorcycles with two seats each (one black, one yellow, one white and one green). It is known that only Danish guests are allowed to drive. In how many different ways can the seven guests be distributed among the four bikes in this way?
""""""
","
import math

# there are 3 swedish guests and 4 danish guests
swedish_guests = 3
danish_guests = 4

# there are 4 bikes with 2 seats each, each with a different color
bikes = 4

# only the danish guests can drive, so each has to take one motorcycle
ways_of_arranging_danish_guests = math.factorial(bikes) / math.factorial(bikes - danish_guests)

# the remaining 3 guests need to be distributed among the 4 remaining seats
ways_of_arranging_swedish_guests = math.factorial(bikes) / math.factorial(bikes - swedish_guests)

# The total number of different ways to distribute the guests among the bikes
total_ways = ways_of_arranging_danish_guests * ways_of_arranging_swedish_guests

print(total_ways)",,"[5, 3, 2, 22, 17, 21, 18, 24, 8, 6, 1, 7, 25, 16, 15, 11, 19, 9, 12, 10, 20, 13, 14, 23]"
5,"A bag contains 12 cards in the shape of geometrically equal rectangles: 3 blue, 2 white, 3 black and 4 red. The 12 cards will be removed, successively and at random, from the bag and placed on a table, lined up in the order in which they are removed. Find the probability that the blue cards are all together. Express the result as an irreducible fraction.",overfit,"""""""
write a program that answers the following question: A bag contains 12 cards in the shape of geometrically equal rectangles: 3 blue, 2 white, 3 black and 4 red. The 12 cards will be removed, successively and at random, from the bag and placed on a table, lined up in the order in which they are removed. Find the probability that the blue cards are all together. Express the result as an irreducible fraction.
""""""
","
import math

from fractions import Fraction

# there are 12 cards: 3 blue, 2 white, 3 black and 4 red
blue_cards = 3
white_cards = 2
black_cards = 3
red_cards = 4
total_cards = blue_cards + white_cards + black_cards + red_cards

# number of different ways to arrange the blue cards, in sequence
blue_cards_ordering = math.factorial(blue_cards)

# number of different ways to arrange the group of blue cards among the remaining cards, in sequence
remaining_cards_ordering = math.factorial((total_cards - blue_cards) + 1)

# number of favourable cases
number_of_favourable_cases = blue_cards_ordering * remaining_cards_ordering

# number of possible cases
number_of_possible_cases = math.factorial(total_cards)

# probability of all blue cards being grouped together, expressed as a fraction
probability_blue_cards_grouped_together = Fraction(number_of_favourable_cases, number_of_possible_cases)

print(probability_blue_cards_grouped_together)",,"[4, 22, 18, 3, 1, 2, 17, 25, 21, 24, 6, 8, 7, 11, 12, 19, 16, 15, 10, 20, 9, 14, 13, 23]"
